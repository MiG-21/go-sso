{
    "swagger": "2.0",
    "info": {
        "description": "go-sso",
        "title": "Swagger go-sso",
        "contact": {},
        "version": "develop"
    },
    "basePath": "/v1",
    "paths": {
        "/application/create": {
            "post": {
                "description": "create application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "create application",
                "operationId": "create-application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ApplicationCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/types.ApplicationCreateResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    }
                }
            }
        },
        "/auth_token": {
            "post": {
                "description": "auth token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sso"
                ],
                "summary": "auth token",
                "operationId": "auth-token",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    }
                }
            }
        },
        "/healthcheck/info": {
            "get": {
                "description": "bidBucket health checker info",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "bidBucket health checker info",
                "operationId": "health-check-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.HealthCheckInfo"
                        }
                    }
                }
            }
        },
        "/healthcheck/ping": {
            "get": {
                "description": "bidBucket health checker ping",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "bidBucket health checker ping",
                "operationId": "health-check-ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.HealthCheckPing"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "post": {
                "description": "user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "user info",
                "operationId": "user-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserInfoResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "register user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "register user",
                "operationId": "register-user",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/types.UserCreateResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    }
                }
            }
        },
        "/user/verification": {
            "get": {
                "description": "verify user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "verify user",
                "operationId": "verify-user",
                "parameters": [
                    {
                        "type": "string",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Done",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "fiber.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "types.ApplicationCreateRequest": {
            "type": "object",
            "properties": {
                "application": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "redirect_url": {
                    "type": "string"
                }
            }
        },
        "types.ApplicationCreateResponse": {
            "type": "object",
            "properties": {
                "application": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "redirect_url": {
                    "type": "string"
                }
            }
        },
        "types.AuthRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.HealthCheckInfo": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "appVersion": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "git": {
                    "$ref": "#/definitions/types.HealthCheckInfoGit"
                }
            }
        },
        "types.HealthCheckInfoGit": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "types.HealthCheckPing": {
            "type": "object",
            "properties": {
                "ping": {
                    "type": "string"
                }
            }
        },
        "types.UserCreateRequest": {
            "type": "object",
            "required": [
                "agreement",
                "confirm_password",
                "email",
                "gender",
                "name",
                "password"
            ],
            "properties": {
                "agreement": {
                    "type": "boolean"
                },
                "confirm_password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.UserCreateResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.UserInfoResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locked": {
                    "type": "boolean"
                },
                "locked_to": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                }
            }
        },
        "types.UserTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}